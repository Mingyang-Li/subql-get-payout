# for new eras
type Account @entity {
  id: ID!
}

type NominatorValidator @entity {
  id: ID! # hash of the combination of 3 below => pick a hash algorithm
  era: Era! @index
  nominator: Account!
  validator: Account!
}

type Era @entity {
  id: ID! # 
  startBlock: BigInt! 
  endBlock: BigInt  # update the prev era endBlock when new era begins
}

# Update when an era is done
type ValidatorPayout @entity {
  # era id + validator id
  id: ID!
  eraId: String!
  eraPayout: BigInt!
  claimed: Boolean # as a param
  claimedAtBlock: BigInt # when claimed, value should be populated with block number
}

type PayoutDetail @entity {
  id: ID! #era id + account id (can be both nom or vali)
  era: Era!
  account: Account! # every nom and val
  # amount: BigInt!
  claimed: Boolean!
  payout: ValidatorPayout!
}
